// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.msw.service.impl;

import com.msw.Presentacion;
import com.msw.Producto;
import com.msw.dao.PresentacionRepository;
import com.msw.service.impl.PresentacionServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PresentacionServiceImpl_Roo_Service_Impl {
    
    declare @type: PresentacionServiceImpl: @Service;
    
    declare @type: PresentacionServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private PresentacionRepository PresentacionServiceImpl.presentacionRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param presentacionRepository
     */
    @Autowired
    public PresentacionServiceImpl.new(PresentacionRepository presentacionRepository) {
        setPresentacionRepository(presentacionRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return PresentacionRepository
     */
    public PresentacionRepository PresentacionServiceImpl.getPresentacionRepository() {
        return presentacionRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param presentacionRepository
     */
    public void PresentacionServiceImpl.setPresentacionRepository(PresentacionRepository presentacionRepository) {
        this.presentacionRepository = presentacionRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param presentacion
     * @return Map
     */
    public Map<String, List<MessageI18n>> PresentacionServiceImpl.validate(Presentacion presentacion) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param presentacion
     */
    @Transactional
    public void PresentacionServiceImpl.delete(Presentacion presentacion) {
        // Clear bidirectional many-to-one child relationship with Producto
        if (presentacion.getProducto() != null) {
            presentacion.getProducto().getPresentaciones().remove(presentacion);
        }
        
        getPresentacionRepository().delete(presentacion);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Presentacion> PresentacionServiceImpl.save(Iterable<Presentacion> entities) {
        return getPresentacionRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void PresentacionServiceImpl.delete(Iterable<Long> ids) {
        List<Presentacion> toDelete = getPresentacionRepository().findAll(ids);
        getPresentacionRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Presentacion
     */
    @Transactional
    public Presentacion PresentacionServiceImpl.save(Presentacion entity) {
        return getPresentacionRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Presentacion
     */
    public Presentacion PresentacionServiceImpl.findOne(Long id) {
        return getPresentacionRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Presentacion
     */
    public Presentacion PresentacionServiceImpl.findOneForUpdate(Long id) {
        return getPresentacionRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Presentacion> PresentacionServiceImpl.findAll(Iterable<Long> ids) {
        return getPresentacionRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Presentacion> PresentacionServiceImpl.findAll() {
        return getPresentacionRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long PresentacionServiceImpl.count() {
        return getPresentacionRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Presentacion> PresentacionServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getPresentacionRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Presentacion> PresentacionServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getPresentacionRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Presentacion> PresentacionServiceImpl.findByProducto(Producto producto, GlobalSearch globalSearch, Pageable pageable) {
        return getPresentacionRepository().findByProducto(producto, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @return Long
     */
    public long PresentacionServiceImpl.countByProducto(Producto producto) {
        return getPresentacionRepository().countByProducto(producto);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Presentacion> PresentacionServiceImpl.getEntityType() {
        return Presentacion.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> PresentacionServiceImpl.getIdType() {
        return Long.class;
    }
    
}
