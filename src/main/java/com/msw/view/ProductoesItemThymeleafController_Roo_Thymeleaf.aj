// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.msw.view;

import com.msw.Producto;
import com.msw.service.api.ProductoService;
import com.msw.view.ProductoesCollectionThymeleafController;
import com.msw.view.ProductoesItemThymeleafController;
import com.msw.view.ProductoesItemThymeleafLinkFactory;
import io.springlets.data.web.validation.GenericValidator;
import io.springlets.web.NotFoundException;
import io.springlets.web.mvc.util.ControllerMethodLinkBuilderFactory;
import io.springlets.web.mvc.util.MethodLinkBuilderFactory;
import io.springlets.web.mvc.util.concurrency.ConcurrencyCallback;
import io.springlets.web.mvc.util.concurrency.ConcurrencyManager;
import io.springlets.web.mvc.util.concurrency.ConcurrencyTemplate;
import java.util.Locale;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.util.UriComponents;

privileged aspect ProductoesItemThymeleafController_Roo_Thymeleaf {
    
    declare @type: ProductoesItemThymeleafController: @Controller;
    
    declare @type: ProductoesItemThymeleafController: @RequestMapping(value = "/productoes/{producto}", name = "ProductoesItemThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ProductoService ProductoesItemThymeleafController.productoService;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessageSource ProductoesItemThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<ProductoesItemThymeleafController> ProductoesItemThymeleafController.itemLink;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<ProductoesCollectionThymeleafController> ProductoesItemThymeleafController.collectionLink;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private final ConcurrencyTemplate<Producto> ProductoesItemThymeleafController.concurrencyTemplate = new ConcurrencyTemplate<Producto>(this);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param productoService
     * @param messageSource
     * @param linkBuilder
     */
    @Autowired
    public ProductoesItemThymeleafController.new(ProductoService productoService, MessageSource messageSource, ControllerMethodLinkBuilderFactory linkBuilder) {
        setProductoService(productoService);
        setMessageSource(messageSource);
        setItemLink(linkBuilder.of(ProductoesItemThymeleafController.class));
        setCollectionLink(linkBuilder.of(ProductoesCollectionThymeleafController.class));
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ProductoService
     */
    public ProductoService ProductoesItemThymeleafController.getProductoService() {
        return productoService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param productoService
     */
    public void ProductoesItemThymeleafController.setProductoService(ProductoService productoService) {
        this.productoService = productoService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessageSource
     */
    public MessageSource ProductoesItemThymeleafController.getMessageSource() {
        return messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messageSource
     */
    public void ProductoesItemThymeleafController.setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<ProductoesItemThymeleafController> ProductoesItemThymeleafController.getItemLink() {
        return itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param itemLink
     */
    public void ProductoesItemThymeleafController.setItemLink(MethodLinkBuilderFactory<ProductoesItemThymeleafController> itemLink) {
        this.itemLink = itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<ProductoesCollectionThymeleafController> ProductoesItemThymeleafController.getCollectionLink() {
        return collectionLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param collectionLink
     */
    public void ProductoesItemThymeleafController.setCollectionLink(MethodLinkBuilderFactory<ProductoesCollectionThymeleafController> collectionLink) {
        this.collectionLink = collectionLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @param locale
     * @param method
     * @return Producto
     */
    @ModelAttribute
    public Producto ProductoesItemThymeleafController.getProducto(@PathVariable("producto") Long id, Locale locale, HttpMethod method) {
        Producto producto = null;
        if (HttpMethod.PUT.equals(method)) {
            producto = productoService.findOneForUpdate(id);
        } else {
            producto = productoService.findOne(id);
        }
        
        if (producto == null) {
            String message = messageSource.getMessage("error_NotFound", new Object[] {"Producto", id}, "The record couldn't be found", locale);
            throw new NotFoundException(message);
        }
        return producto;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @param model
     * @return ModelAndView
     */
    @GetMapping(name = "show")
    public ModelAndView ProductoesItemThymeleafController.show(@ModelAttribute Producto producto, Model model) {
        model.addAttribute("producto", producto);
        return new ModelAndView("productoes/show");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/inline", name = "showInline")
    public ModelAndView ProductoesItemThymeleafController.showInline(@ModelAttribute Producto producto, Model model) {
        model.addAttribute("producto", producto);
        return new ModelAndView("productoes/showInline :: inline-content");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void ProductoesItemThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void ProductoesItemThymeleafController.populateForm(Model model) {
        populateFormats(model);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConcurrencyTemplate
     */
    public ConcurrencyTemplate<Producto> ProductoesItemThymeleafController.getConcurrencyTemplate() {
        return concurrencyTemplate;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String ProductoesItemThymeleafController.getModelName() {
        return "producto";
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String ProductoesItemThymeleafController.getEditViewPath() {
        return "productoes/edit";
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param record
     * @return Integer
     */
    public Integer ProductoesItemThymeleafController.getLastVersion(Producto record) {
        return getProductoService().findOne(record.getId()).getVersion();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @param model
     * @return ModelAndView
     */
    public ModelAndView ProductoesItemThymeleafController.populateAndGetFormView(Producto entity, Model model) {
        // Populate the form with all the necessary elements
        populateForm(model);
        // Add concurrency attribute to the model to show the concurrency form
        // in the current edit view
        model.addAttribute("concurrency", true);
        // Add the new version value to the model.
        model.addAttribute("newVersion", getLastVersion(entity));
        // Add the current pet values to maintain the values introduced by the user
        model.addAttribute(getModelName(), entity);
        // Return the edit view path
        return new org.springframework.web.servlet.ModelAndView(getEditViewPath(), model.asMap());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param binder
     */
    @InitBinder("producto")
    public void ProductoesItemThymeleafController.initProductoBinder(WebDataBinder binder) {
        binder.setDisallowedFields("id");
        // Register validators
        GenericValidator validator = new GenericValidator(Producto.class, getProductoService());
        binder.addValidators(validator);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/edit-form", name = "editForm")
    public ModelAndView ProductoesItemThymeleafController.editForm(@ModelAttribute Producto producto, Model model) {
        populateForm(model);
        
        model.addAttribute("producto", producto);
        return new ModelAndView("productoes/edit");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @param result
     * @param version
     * @param concurrencyControl
     * @param model
     * @return ModelAndView
     */
    @PutMapping(name = "update")
    public ModelAndView ProductoesItemThymeleafController.update(@Valid @ModelAttribute Producto producto, BindingResult result, @RequestParam("version") Integer version, @RequestParam(value = "concurrency", required = false, defaultValue = "") String concurrencyControl, Model model) {
        // Check if provided form contain errors
        if (result.hasErrors()) {
            populateForm(model);
            return new ModelAndView(getEditViewPath());
        }
        // Create Concurrency Spring Template to ensure that the following code will manage the
        // possible concurrency exceptions that appears and execute the provided coded inside the Spring template.
        // If some concurrency exception appears the template will manage it.
        Producto savedProducto = getConcurrencyTemplate().execute(producto, model, new ConcurrencyCallback<Producto>() {
            @Override
            public Producto doInConcurrency(Producto producto) throws Exception {
                return getProductoService().save(producto);
            }
        });
        UriComponents showURI = getItemLink().to(ProductoesItemThymeleafLinkFactory.SHOW).with("producto", savedProducto.getId()).toUri();
        return new ModelAndView("redirect:" + showURI.toUriString());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @return ResponseEntity
     */
    @ResponseBody
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> ProductoesItemThymeleafController.delete(@ModelAttribute Producto producto) {
        getProductoService().delete(producto);
        return ResponseEntity.ok().build();
    }
    
}
