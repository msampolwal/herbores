// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.msw.view;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import com.msw.Presentacion;
import com.msw.service.api.PresentacionService;
import com.msw.view.PresentacionDeserializer;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;

privileged aspect PresentacionDeserializer_Roo_EntityDeserializer {
    
    declare @type: PresentacionDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return PresentacionService
     */
    public PresentacionService PresentacionDeserializer.getPresentacionService() {
        return presentacionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param presentacionService
     */
    public void PresentacionDeserializer.setPresentacionService(PresentacionService presentacionService) {
        this.presentacionService = presentacionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService PresentacionDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void PresentacionDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return Presentacion
     * @throws IOException
     */
    public Presentacion PresentacionDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        Presentacion presentacion = presentacionService.findOne(id);
        if (presentacion == null) {
            throw new NotFoundException("Presentacion not found");
        }
        return presentacion;
    }
    
}
